{"version":3,"sources":["components/utils/TWInput.tsx","helpers.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["States","clsfy","classes","map","classs","Array","isArray","cls","Object","keys","filter","key","join","trim","TWInput","className","rules","props","useState","Default","state","setState","value","setValue","Math","random","toString","slice","id","hint","label","setLabel","helpText","setHelpText","handleSetLabel","pState","useEffect","error","Invalid","success","Valid","focused","Focus","limbo","Limbo","initial","htmlFor","xmlns","viewBox","fill","fillRule","d","clipRule","placeholder","onBlur","type","onChange","e","target","evals","required","v","rule","every","evl","errorMessage","find","onFocus","App","length","test","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAIKA,E,qDCJCC,EAAQ,SAARA,IAAgC,IAAD,uBAAnBC,EAAmB,yBAAnBA,EAAmB,gBACpC,OAAOA,EAAQC,KAAI,SAAAC,GAClB,MAAsB,kBAAXA,EAA4BA,GACvCA,EAASC,MAAMC,QAAQF,GACpBA,EAAOD,KAAI,SAAAI,GAAG,OAAIN,EAAMM,MACxBC,OAAOC,KAAKL,GAAQM,QAAO,SAAAC,GAAG,OAAIP,EAAOO,OAC9BC,KAAK,KAAKC,UACtBD,KAAK,KAAKC,Q,yCDHTb,K,cAAAA,E,cAAAA,E,cAAAA,E,kBAAAA,E,mBAAAA,M,KAiBL,IA+Hec,EA/HmB,SAAC,GAA8C,IAAD,IAA3CC,iBAA2C,MAA/B,GAA+B,MAA3BC,aAA2B,MAAnB,GAAmB,EAAZC,EAAY,iBAE/E,EAA0BC,mBAASlB,EAAOmB,SAA1C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BH,mBAASD,EAAMK,OAAS,IAAlD,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAAaL,mBAASM,KAAKC,SAASC,SAAS,IAAIC,MAAM,IAAhDC,EAAP,oBACA,EAAeV,mBAASD,EAAMY,MAAQ,kBAA/BA,EAAP,oBACA,EAA0BX,mBAAiBD,EAAMa,OAAS9B,EAAOmB,SAAjE,mBAAOW,EAAP,KAAcC,EAAd,KACA,EAAgCb,mBAAiBD,EAAMe,UAAY,kCAAnE,mBAAOA,EAAP,KAAiBC,EAAjB,KAeMC,EAAiB,SAACC,GACvBJ,EAASd,EAAMa,MAAQb,EAAMa,MAAQK,GAAUnC,EAAOmB,UA2BvDiB,qBAAU,WACTnB,EAAMK,OAASC,EAASN,EAAMK,SAC5B,CAACL,EAAMK,QAGV,IAAMe,EAAQjB,IAAUpB,EAAOsC,QACzBC,EAAUnB,IAAUpB,EAAOwC,MAC3BC,EAAUrB,IAAUpB,EAAO0C,MAC3BC,EAAQvB,IAAUpB,EAAO4C,MACzBC,EAAUzB,IAAUpB,EAAOmB,QAEjC,OACC,sBAAKJ,UAAWA,EAAhB,UACC,uBACC+B,QAASlB,EACTb,UAAWd,EAAM,oCAAqC,CACrD,eAAgBoC,EAChB,gBAAiBM,EACjB,iBAAkBJ,EAClB,gBAAiBE,EACjB,gBAAiBI,IAPnB,SAUEf,IAEF,sBAAKf,UAAWd,EAAM,+CAAgD,CACrE,iBAAkBoC,EAClB,kBAAmBM,EACnB,mBAAoBJ,EACpB,kBAAmBE,EACnB,kBAAmBI,IALpB,UAOC,sBAAK9B,UAAWd,EAAM,oDAAqD,CAC1E,cAAewC,EACf,cAAeI,EACf,eAAgBN,EAChB,aAAcF,EACd,cAAeM,IALhB,WAOGE,GAAWJ,IAAa,qBAAK1B,UAAU,mCACvCsB,GAASE,GAAWI,IACrB,sBAAKI,MAAM,6BAA6BhC,UAAU,UAAUiC,QAAQ,YAAYC,KAAK,eAArF,UACEV,GAAW,sBAAMW,SAAS,UAAUC,EAAE,wIAAwIC,SAAS,YACvLf,GAAS,sBAAMa,SAAS,UAAUC,EAAE,0NAA0NC,SAAS,YACvQT,GAAS,sBAAMQ,EAAE,4EAIrB,uBACCvB,GAAIA,EACJN,MAAOA,EACP+B,YAAaxB,EACbyB,OAtFiB,WACfrC,EAAMa,OAASV,IAAUpB,EAAO0C,QACpCrB,EAASrB,EAAOmB,SAChBY,EAAS/B,EAAOmB,WAoFdoC,KAAMtC,EAAMsC,MAAQ,OACpBC,SA/EkB,SAACC,GACtB,IAAMnC,EAAQmC,EAAEC,OAAOpC,MAEnBqC,GADW1C,EAAM2C,SAAN,CAAkB,SAACC,GAAD,QAAiBA,GAAK,uBAAxC,mBAAiE7C,IAASA,GACtEb,KAAI,SAAA2D,GAAI,OAAIA,EAAKxC,MAEpC,GAAKA,GAAUL,EAAM2C,SAKhB,GAAID,EAAMI,OAAM,SAAAC,GAAG,OAAY,IAARA,KAC3B3C,EAASrB,EAAOwC,OAChBP,EAAY,sBACZC,EAAelC,EAAOwC,WAElB,CACJnB,EAASrB,EAAOsC,SAChB,IAAI2B,EAAeN,EAAMO,MAAK,SAAAF,GAAG,MAAmB,kBAARA,GAAoBA,KAChE/B,EAAYgC,GAAgB,sBAC5B/B,EAAelC,EAAOsC,cAbtBjB,EAASrB,EAAOmB,SAChBc,EAAYhB,EAAMe,UAAY,kCAC9BE,IAaDX,EAASD,IA2DN6C,QA/FkB,WAChBlD,EAAMa,OAASV,IAAUpB,EAAOmB,UACpCY,EAAS/B,EAAO0C,OAChBrB,EAASrB,EAAO0C,SA6Fd3B,UAAU,+EAEX,qBAAKA,UAAU,uFAIhB,qBACCA,UAAWd,EAAM,oBAAqB,CACrC,eAAgBoC,EAChB,gBAAiBM,EACjB,iBAAkBJ,EAClB,gBAAiBE,EACjB,gBAAiBI,IANnB,SASEb,QE7FUoC,EA/CH,WACV,OACE,qBAAKrD,UAAU,mDAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,sBAAKA,UAAU,yGAAf,UACE,oBAAIA,UAAU,kCAAd,6BACA,qBAAKA,UAAU,gBAAf,sCACA,oBAAIA,UAAU,SACd,uBAAMA,UAAU,OAAhB,UACE,cAAC,EAAD,CACEC,MAAO,CACL,SAAA6C,GAAC,QAAMA,GAAK,sBACZ,SAAAA,GAAC,OAAIA,EAAEQ,QAAU,GAAK,yCACtB,SAAAR,GAAC,MAAI,iBAAiBS,KAAKT,IAAM,iDAGrC,oBAAI9C,UAAU,SACd,cAAC,EAAD,CACE6C,UAAQ,EACR/B,KAAK,gBACLC,MAAM,WACNE,SAAS,6DACThB,MAAO,CACL,SAAA6C,GAAC,OAAIA,EAAEQ,QAAU,GAAK,yCACtB,SAAAR,GAAC,OAAK,SAASS,KAAKT,IAAM,qCAC1B,SAAAA,GAAC,MAAI,kBAAkBS,KAAKT,IAAM,iEAGtC,cAAC,EAAD,CACED,UAAQ,EACRL,KAAK,WACLzB,MAAM,WACNf,UAAU,OACVc,KAAK,2BACLG,SAAS,4CACThB,MAAO,CACL,SAAA6C,GAAC,OAAIA,EAAEQ,QAAU,GAAK,6CACtB,SAAAR,GAAC,OAAIA,EAAEQ,QAAU,IAAM,8DCzBxBE,G,YAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.9ee246d7.chunk.js","sourcesContent":["import { clsfy } from \"../../helpers\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\ntype Rule = (v: string) => boolean | string\r\nenum States {\r\n\tLimbo = 'Limbo',\r\n\tFocus = 'Focus',\r\n\tValid = 'Valid',\r\n\tDefault = 'Default',\r\n\tInvalid = 'Invalid',\r\n}\r\ninterface IProps {\r\n\tlabel?: string,\r\n\thint?: string,\r\n\ttype?: string,\r\n\tvalue?: string,\r\n\tclassName?: string,\r\n\thelpText?: string,\r\n\trequired?: boolean,\r\n\trules?: Rule[]\r\n}\r\nconst TWInput: React.FC<IProps> = ({ className = '', rules = [], ...props }) => {\r\n\r\n\tconst [state, setState] = useState(States.Default)\r\n\tconst [value, setValue] = useState(props.value || '')\r\n\tconst [id] = useState(Math.random().toString(36).slice(2))\r\n\tconst [hint] = useState(props.hint || 'Type text here')\r\n\tconst [label, setLabel] = useState<string>(props.label || States.Default)\r\n\tconst [helpText, setHelpText] = useState<string>(props.helpText || 'Modify the data in this field.')\r\n\r\n\t// Methods\r\n\tconst handleOnFocus = () => {\r\n\t\tif (!props.label && state === States.Default) {\r\n\t\t\tsetLabel(States.Focus)\r\n\t\t\tsetState(States.Focus)\r\n\t\t}\r\n\t}\r\n\tconst handleOnBlur = () => {\r\n\t\tif (!props.label && state === States.Focus) {\r\n\t\t\tsetState(States.Default)\r\n\t\t\tsetLabel(States.Default)\r\n\t\t}\r\n\t}\r\n\tconst handleSetLabel = (pState?: States) => {\r\n\t\tsetLabel(props.label ? props.label : pState || States.Default)\r\n\t}\r\n\tconst handleOnInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst value = e.target.value\r\n\t\tconst mRules = props.required ? [(v: string) => !!v || 'Field is required.', ...rules] : rules\r\n\t\tlet evals = mRules.map(rule => rule(value))\r\n\r\n\t\tif (!value && !props.required) {\r\n\t\t\tsetState(States.Default)\r\n\t\t\tsetHelpText(props.helpText || 'Modify the data in this field.')\r\n\t\t\thandleSetLabel()\r\n\t\t}\r\n\t\telse if (evals.every(evl => evl === true)) {\r\n\t\t\tsetState(States.Valid)\r\n\t\t\tsetHelpText('This data is valid')\r\n\t\t\thandleSetLabel(States.Valid)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetState(States.Invalid)\r\n\t\t\tlet errorMessage = evals.find(evl => typeof evl === 'string' && evl) as string | undefined\r\n\t\t\tsetHelpText(errorMessage || 'This data is valid')\r\n\t\t\thandleSetLabel(States.Invalid)\r\n\t\t}\r\n\t\tsetValue(value)\r\n\t}\r\n\r\n\t// Effects\r\n\tuseEffect(() => {\r\n\t\tprops.value && setValue(props.value)\r\n\t}, [props.value])\r\n\r\n\t// Computed\r\n\tconst error = state === States.Invalid\r\n\tconst success = state === States.Valid\r\n\tconst focused = state === States.Focus\r\n\tconst limbo = state === States.Limbo\r\n\tconst initial = state === States.Default\r\n\r\n\treturn (\r\n\t\t<div className={className}>\r\n\t\t\t<label\r\n\t\t\t\thtmlFor={id}\r\n\t\t\t\tclassName={clsfy('text-sm mb-1 block font-bold ml-1', {\r\n\t\t\t\t\t'text-red-500': error,\r\n\t\t\t\t\t'text-blue-500': limbo,\r\n\t\t\t\t\t'text-green-500': success,\r\n\t\t\t\t\t'text-gray-700': focused,\r\n\t\t\t\t\t'text-gray-500': initial\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</label>\r\n\t\t\t<div className={clsfy(\"relative rounded border overflow-hidden flex\", {\r\n\t\t\t\t'border-red-500': error,\r\n\t\t\t\t'border-blue-500': limbo,\r\n\t\t\t\t'border-green-500': success,\r\n\t\t\t\t'border-gray-500': focused,\r\n\t\t\t\t'border-gray-300': initial\r\n\t\t\t})}>\r\n\t\t\t\t<div className={clsfy('w-14 grid text-white place-items-center flex-none', {\r\n\t\t\t\t\t'bg-gray-300': focused,\r\n\t\t\t\t\t'bg-gray-100': initial,\r\n\t\t\t\t\t'bg-green-500': success,\r\n\t\t\t\t\t'bg-red-500': error,\r\n\t\t\t\t\t'bg-blue-500': limbo,\r\n\t\t\t\t})}>\r\n\t\t\t\t\t{(initial || focused) && (<div className='h-4 w-4 bg-white rounded-full' />)}\r\n\t\t\t\t\t{(error || success || limbo) && (\r\n\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n\t\t\t\t\t\t\t{success && <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />}\r\n\t\t\t\t\t\t\t{error && <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />}\r\n\t\t\t\t\t\t\t{limbo && <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />}\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<input\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tplaceholder={hint}\r\n\t\t\t\t\tonBlur={handleOnBlur}\r\n\t\t\t\t\ttype={props.type || 'text'}\r\n\t\t\t\t\tonChange={handleOnInput}\r\n\t\t\t\t\tonFocus={handleOnFocus}\r\n\t\t\t\t\tclassName='text-base bg-transparent text-gray-700 w-full h-12 px-3 focus:outline-none'\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='w-16 h-12 absolute right-0 inset-y-0 bg-gradient-to-l from-white to-transparent'>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName={clsfy('px-1 mt-1 text-sm', {\r\n\t\t\t\t\t'text-red-500': error,\r\n\t\t\t\t\t'text-blue-500': limbo,\r\n\t\t\t\t\t'text-green-500': success,\r\n\t\t\t\t\t'text-gray-600': focused,\r\n\t\t\t\t\t'text-gray-400': initial\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t{helpText}\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\nexport default TWInput","const clsfy = (...classes: any[]) => {\r\n\treturn classes.map(classs => {\r\n\t\tif (typeof classs === 'string') return classs\r\n\t\tclasss = Array.isArray(classs)\r\n\t\t\t? classs.map(cls => clsfy(cls))\r\n\t\t\t: Object.keys(classs).filter(key => classs[key])\r\n\t\treturn classs.join(' ').trim()\r\n\t}).join(' ').trim()\r\n}\r\n\r\nexport { clsfy }","import TWInput from \"./components/utils/TWInput\";\n\nconst App = () => {\n  return (\n    <div className=\"min-h-screen bg-gray-200 grid place-items-center\">\n      <div className=\"container mx-auto px-5 md:px-0\">\n        <div className='p-5 md:py-12 md:px-12 bg-white rounded-md shadow-lg w-full md:max-w-sm lg:max-w-md xl:max-w-lg mx-auto'>\n          <h2 className='font-bold text-xl text-gray-800'>Validation Form</h2>\n          <div className='text-gray-600'>Customly made vaidations</div>\n          <hr className='my-3' />\n          <form className='py-4'>\n            <TWInput\n              rules={[\n                v => !!v || 'Field is required.',\n                v => v.length >= 3 || 'Data must have at least 3 characters.',\n                v => /^[a-zA-Z0-9]+$/.test(v) || 'Data can only have characters and numbers.'\n              ]}\n            />\n            <hr className='my-8' />\n            <TWInput\n              required\n              hint='e.g: john_doe'\n              label='Username'\n              helpText='Username can have only characters, numbers and underscore.'\n              rules={[\n                v => v.length >= 3 || 'Data must have at least 3 characters.',\n                v => !/^[0-9]/.test(v) || 'Username Can\\'t start with number.',\n                v => /^[a-zA-Z0-9_]+$/.test(v) || 'Username can have only characters, numbers and underscore.'\n              ]}\n            />\n            <TWInput\n              required\n              type='password'\n              label='Password'\n              className='mt-3'\n              hint='Enter your password here'\n              helpText='Password must have at least 8 characters.'\n              rules={[\n                v => v.length >= 8 || 'Password must have at least 8 characters.',\n                v => v.length <= 20 || 'Password can\\'t have more than 20 characters.',\n              ]}\n            />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './assets/css/tailwind.css'\nimport './assets/css/index.css'\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}